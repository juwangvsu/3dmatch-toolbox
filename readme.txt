-----11/23/2021 docker image compile work -----------
homepc:
matlab installed, docker image built

docker run --gpus all --rm -it -v "/media/student/cuda:/app" -v "/media/student/data6/3dmatch-toolbox:/app2" jwang3vsu/cudanncv:7.5-cudnn5-devel-ubuntu14.04 bash

demo: passed, run ./demo in docker container to extract features and descriptor, then run matlab script at host machine.

	cd /app2/core
	./compile.sh
		this generate the cuda code demo from demo.cu
	./demo require input file, otherwise core dump
	load marvin network structure and weight, load ply file, output descriptor

	./download-weights.sh
	download pretrained weights

	./demo ../data/sample/3dmatch-demo/single-depth-1.ply fragment-1
	./demo ../data/sample/3dmatch-demo/single-depth-2.ply fragment-2 

	then run matlab script demo.m
		matlab code are all in external/, matlab code run ransac to estimate pose transform\		   matlab code use the data generated by the cuda code 
		for each pt cloud, we have 500 keypoints and 500 descriptors.
		for each pt cloud, a KD search tree is build from 500 descriptors
		then kdtree #2 is searched in kdtree #1, resulting in a list of
		match descriptors (from kdtree2 in kdtree 1)
		the matched descriptor corresponding to matched keypoints, 
		the matched keypoints are then ransac to calculate the transform matrix Rt
		
	demo data size:
		single-depth-1.ply: 252179 points
		single-depth-2.ply: 284874 points
		keypoints:  500
		descriptor: 500x512, each descriptor is a 512 vector
		each descriptor is calculated at each keypoints by the convnet when run  ./demo
		
training: tbd
	to compile training code:
	cd training; ./compile.sh

gaps: tbd
	copy of geometric processing software
